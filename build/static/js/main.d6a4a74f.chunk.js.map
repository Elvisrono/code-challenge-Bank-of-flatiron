{"version":3,"sources":["components/Transaction.js","components/TransactionsList.js","components/Search.js","components/AddTransactionForm.js","components/AccountContainer.js","components/App.js","index.js"],"names":["Transaction","date","description","category","amount","TransactionsList","data","className","map","dataItem","id","Search","searchFunction","useState","search","setSearch","useEffect","type","placeholder","onChange","e","preventDefault","target","value","AddTransactionForm","fetchFunction","submitted","setSubmitted","onSubmit","reset","name","AccountContainer","accountData","setAccountData","accountUpdate","setAccountUpdate","searchTerms","fetch","then","res","json","filtered","filter","item","includes","console","log","catch","error","method","headers","Accept","body","JSON","stringify","newData","push","App","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6a4a74f.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Transaction({date, description, category, amount}) {\n  return (\n    <tr>\n      <td>{date}</td>\n      <td>{description}</td>\n      <td>{category}</td>\n      <td>{amount}</td>\n    </tr>\n  );\n}\n\nexport default Transaction;\n","import React from \"react\";\nimport Transaction from \"./Transaction\";\n\nfunction TransactionsList({ data }) {\n  return (\n    <table className=\"table table-light\">\n      <tbody>\n        <tr>\n          <th>\n            <h3 className=\"ui center aligned header\">Date</h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">Description</h3>\n          \n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">Category</h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">Amount</h3>\n          </th>\n        </tr>\n\n      \n               {\n          data.map(dataItem => {\n            return <Transaction key={dataItem.id} date={dataItem.date} description={dataItem.description} category={dataItem.category} amount={dataItem.amount} />\n          })\n        }\n      </tbody>\n    </table>\n  );\n}\n\nexport default TransactionsList;\n","import React , { useEffect , useState} from \"react\";\n\nfunction Search({searchFunction}) {\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    searchFunction(search)\n  }, [search])\n\n  // update state on input change \n  function handleSearch(e){\n    e.preventDefault();\n    setSearch(e.target.value);\n  }\n  return (\n    <form className=\"d-flex\">\n    <input className=\"formcontrol\"\n    type=\"text\" placeholder=\"Search transactions\" onChange={handleSearch}\n    id=\"search\"/>\n    <button className=\"btn btn-outline-info ms-1\"\n        id= \"searchBtn\">SEARCH</button>\n        \n</form>\n  \n  );\n}\n\nexport default Search;\n","import React, { useEffect, useState } from \"react\";\n\nfunction AddTransactionForm({fetchFunction}) {\n  const [submitted, setSubmitted] = useState(null);\n  // const [addedData, setAddedData] = useState(null);\n\n  useEffect(() => {\n    fetchFunction(submitted)\n\n  }, [submitted])\n\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const date = e.target.date.value;\n    const description = e.target.description.value;\n    const category = e.target.category.value;\n    const amount = e.target.amount.value;\n\n    const formData = {\n      date: date,\n      description: description,\n      category: category,\n      amount: amount\n    }\n    // set submitted data\n    setSubmitted(formData);\n    e.target.reset();\n\n  }\n\n  return (\n    <div className=\"ui segment\">\n      <form className=\"formbox\" onSubmit={handleSubmit}>\n        <div className=\"form\">\n          <input type=\"date\" name=\"date\" />\n          <input type=\"text\" name=\"description\" placeholder=\"Description\" />\n          <input type=\"text\" name=\"category\" placeholder=\"Category\" />\n          <input type=\"number\" name=\"amount\" placeholder=\"Amount\" />\n          <br></br>\n        </div>\n        <br></br>\n        <br></br>\n        <button className=\"btn btn-outline-info ms-1\" type=\"submit\">\n          Add Transaction\n        </button>\n      </form>\n\n    </div>\n  );\n}\n\nexport default AddTransactionForm;\n","import React, { useEffect, useState } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer() {\n  const [accountData, setAccountData] = useState([]);\n  // check state of current data\n  const [accountUpdate, setAccountUpdate] = useState([...accountData])\n  const [searchData, setSearchData] = useState([...accountData]);\n\n\n useEffect(() => {\n    fetch(\"http://localhost:8001/transactions\")\n      .then(res => res.json())\n      .then(data => {\n        setAccountData(data);\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }, [accountUpdate])\n\n  async function searchFunction(searchTerms){\n    fetch(\"http://localhost:8001/transactions\")\n      .then(res => res.json())\n      .then(data => {\n        let newData = [];\n        const filtered = data.filter(item => {\n          return item.description.includes(searchTerms)\n          \n        })\n        setAccountData(filtered)\n        console.log(filtered)\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n  }\n\n  // handle addition of data \n  async function fetchAddData(submitted){\n    fetch(\"http://localhost:8001/transactions\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        },\n        // data from the form\n        body: JSON.stringify(submitted)\n      })\n      .then(res => res.json())\n      .then(data => {\n        let newData = [];\n        newData.push(data)\n        // update the dom with posted data\n        setAccountUpdate(...newData)\n        console.log(newData)\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n\n\n\n  return (\n    <div>\n      <Search searchFunction={searchFunction} />\n      <AddTransactionForm fetchFunction={fetchAddData}/>\n      <TransactionsList data={accountData} />\n    </div>\n  \n    \n  );\n}\n\nexport default AccountContainer;\n","import React from \"react\";\nimport AccountContainer from \"./AccountContainer\";\n\n\nfunction App() {\n  return (\n\n    \n    <div className=\"ui container\">\n      <nav className=\"navbar navbar-expand-lg bg-body-tertiary\">\n        <div className=\"container-fluid\">\n          <a className=\"navbar-brand bg-blue\" href=\"The Bank Of Flatiron\"> </a>\n          \n\n        </div>\n       \n      </nav>\n     \n<h1 className=\"display\">The Bank Of Flatiron</h1>\n\n      <AccountContainer />\n    </div>\n    \n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}